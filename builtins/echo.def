This file is echo.def, from which is created echo.c.
It implements the builtin "echo" in Bash.

Copyright (C) 1987-2018 Free Software Foundation, Inc.

This file is part of GNU Bash, the Bourne Again SHell.

Bash is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Bash is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Bash.  If not, see <http://www.gnu.org/licenses/>.

$PRODUCES echo.c
#include <config.h>

#if defined (HAVE_UNISTD_H)
#  include <unistd.h>
#endif

#include "../bashansi.h"

#include <stdio.h>
#include "../shell.h"

#include "common.h"

$BUILTIN echo
$FUNCTION echo_builtin
$DEPENDS_ON V9_ECHO
$SHORT_DOC echo [-neE] [arg ...]
Write arguments to the standard output.

Display the ARGs, separated by a single space character and followed by a
newline, on the standard output.

Options:
  -n	do not append a newline
  -e	enable interpretation of the following backslash escapes
  -E	explicitly suppress interpretation of backslash escapes

`echo' interprets the following backslash-escaped characters:
  \a	alert (bell)
  \b	backspace
  \c	suppress further output
  \e	escape character
  \E	escape character
  \f	form feed
  \n	new line
  \r	carriage return
  \t	horizontal tab
  \v	vertical tab
  \\	backslash
  \0nnn	the character whose ASCII code is NNN (octal).  NNN can be
		0 to 3 octal digits
  \xHH	the eight-bit character whose value is HH (hexadecimal).  HH
		can be one or two hex digits
  \uHHHH	the Unicode character whose value is the hexadecimal value HHHH.
		HHHH can be one to four hex digits.
  \UHHHHHHHH the Unicode character whose value is the hexadecimal value
		HHHHHHHH. HHHHHHHH can be one to eight hex digits.

Exit Status:
Returns success unless a write error occurs.
$END

$BUILTIN echo
$FUNCTION echo_builtin
$DEPENDS_ON !V9_ECHO
$SHORT_DOC echo [-n] [arg ...]
Write arguments to the standard output.

Display the ARGs on the standard output followed by a newline.

Options:
  -n	do not append a newline

Exit Status:
Returns success unless a write error occurs.
$END

#if defined (V9_ECHO)
#  define VALID_ECHO_OPTIONS "neE"
#else /* !V9_ECHO */
#  define VALID_ECHO_OPTIONS "n"
#endif /* !V9_ECHO */

/* System V machines already have a /bin/sh with a v9 behaviour.  We
   give Bash the identical behaviour for these machines so that the
   existing system shells won't barf.  Regrettably, the SUS v2 has
   standardized the Sys V echo behavior.  This variable is external
   so that we can have a `shopt' variable to control it at runtime. */
#if defined (DEFAULT_ECHO_TO_XPG) || defined (STRICT_POSIX)
int xpg_echo = 1;
#else
int xpg_echo = 0;
#endif /* DEFAULT_ECHO_TO_XPG */

/* Print the words in LIST to standard output.  If the first word is
   `-n', then don't print a trailing newline.  We also support the
   echo syntax from Version 9 Unix systems. */

extern int r_echo_builtin(WORD_LIST *);

int
echo_builtin (list)
     WORD_LIST *list;
{
	r_echo_builtin(list);
}
